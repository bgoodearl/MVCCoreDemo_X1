{
  "AppSettings": {
    "blazorDetailedErrors": true
  },
  "AzureAd": {
    "Config_Info": "Set values here from Azure Active Directory App Registration",
    "Instance": "https://login.microsoftonline.com/",
    "Domain": "qualified.domain.name",
    "TenantId": "22222222-2222-2222-2222-222222222222",
    "ClientId": "11111111-1111-1111-11111111111111111",
    "CallbackPath": "/signin-oidc"
  },
  "IdentityServer": {
    "Authority": "https://idsvr6.xxxx.local",
    "ClientId": "mvcdemo22",
    "ClientSecret": "my_secret",
    "ResponseType": "code"
  },
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft": "Warning",
      "Microsoft.Hosting.Lifetime": "Information"
    }
  },
  "AllowedHosts": "*",
  "NLog": {
    "autoReload": true,
    "throwConfigExceptions": true,
    "internalLogLevel": "Warn",
    "internalLogFile": "D:\\_dev\\GitHub\\Blazor\\MVCCoreDemo_X1\\_locallogs\\internal-nlog-tos.txt",
    "extensions": [
      { "assembly": "NLog.Extensions.Logging" },
      { "assembly": "NLog.Web.AspNetCore" }
    ],
    "variables": {
      "var_logdir": "D:\\_dev\\GitHub\\Blazor\\MVCCoreDemo_X1\\_locallogs"
    },
    "default-wrapper": {
      "type": "AsyncWrapper",
      "overflowAction": "Block"
    },
    "targets": {
      "all-file": {
        "type": "File",
        "fileName": "${var_logdir}/MVCBlazorDemo-all-${shortdate}.log",
        "layout": {
          "type": "JsonLayout",
          "Attributes": [
            {
              "name": "timestamp",
              "layout": "${date:format=o}"
            },
            {
              "name": "level",
              "layout": "${level:uppercase=true}"
            },
            {
              "name": "logger",
              "layout": "${logger}"
            },
            {
              "name": "message",
              "layout": "${message:raw=false}"
            },
            {
              "name": "properties",
              "encode": false,
              "layout": {
                "type": "JsonLayout",
                "includeallproperties": "true"
              }
            },
            {
              "name": "exception",
              "encode": false,
              "layout": "${onexception:inner=${exception:format=@}}"
            }
          ]
        }
      },
      "own-console": {
        "type": "LimitingWrapper",
        "interval": "00:00:01",
        "messageLimit": 100,
        "target": {
          "type": "ColoredConsole",
          "layout": "${longdate}|${event-properties:item=EventId_Id:whenEmpty=0}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}|${callsite}",
          "rowHighlightingRules": [
            {
              "condition": "level == LogLevel.Error",
              "foregroundColor": "Red"
            },
            {
              "condition": "level == LogLevel.Fatal",
              "foregroundColor": "Red",
              "backgroundColor": "White"
            }
          ],
          "wordHighlightingRules": [
            {
              "regex": "on|off",
              "foregroundColor": "DarkGreen"
            },
            {
              "condition": "level == LogLevel.Debug",
              "text": "[TEST]",
              "foregroundColor": "Blue"
            }
          ]
        }
      }
    },
    "rules": [
      {
        "logger": "Microsoft.*",
        "maxLevel": "Info",
        "final": true
      },
      {
        "logger": "*",
        "minLevel": "Trace",
        "writeTo": "all-file"
      },
      {
        "logger": "*",
        "minLevel": "Debug",
        "writeTo": "own-console"
      }
    ]
  }
}
